# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: license
kind: pipeline
type: docker

steps:
  - name: check
    image: golang:1.17-alpine
    pull: always
    commands:
      - go install github.com/google/addlicense@v1.0.0
      - addlicense -c "SIGHUP s.r.l" -v -l bsd -y "2017-present" --check .

---
name: policeman
kind: pipeline
type: docker

depends_on:
  - license

platform:
  os: linux
  arch: amd64

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'.
      # Doing this is valid for Kustomize patches
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # Some duplicated code is intended.
      VALIDATE_JSCPD: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      # Disable natural language checks
      VALIDATE_NATURAL_LANGUAGE: "false"
      # Disable .env files validation
      VALIDATE_ENV: "false"
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/istio-operator/profiles/full > istio-operator-full.yml
      - kustomize build katalog/kuma/standalone > kuma-standalone.yml

  - name: check-deprecated-apis
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
    - /pluto detect istio-operator-full.yml --ignore-deprecations --ignore-removals --target-versions=k8s=v1.27.0
    - /pluto detect kuma-standalone.yml --ignore-deprecations --ignore-removals --target-versions=k8s=v1.27.0
---
name: e2e-kubernetes-1.24-istio
kind: pipeline
type: docker

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

node:
  runner: internal

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**
      - refs/heads/hotfix-*
      - refs/heads/develop # TBD

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v1.24.0
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-124
      pipeline_id: cluster-124
      local_kind_config_path: katalog/tests/istio-operator/kind-config.yml
      instance_size: 2-extra-large
      cluster_version: "1.24.0"
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e-requirements
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    commands:
      - export CLUSTER_NAME=124
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export KUBECONFIG=/shared/kube/kubeconfig-124
      - cd katalog/tests/istio-operator/requirements
      - furyctl vendor -H
      - cd ../../../../
      - bats -t katalog/tests/istio-operator/istio-requirements.sh

  - name: e2e-basic-istio
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [e2e-requirements]
    commands:
      - export CLUSTER_NAME=124
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export KUBECONFIG=/shared/kube/kubeconfig-124
      - cat /shared/machine/private_key
      - cat $KUBECONFIG
      - bats -t katalog/tests/istio-operator/istio-minimal-install.sh
      - bats -t katalog/tests/istio-operator/istio-minimal.sh

  - name: e2e-egress-gateway
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [e2e-basic-istio]
    commands:
      - export CLUSTER_NAME=124
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export KUBECONFIG=/shared/kube/kubeconfig-124
      - bats -t katalog/tests/istio-operator/istio-egress-install.sh
      - bats -t katalog/tests/istio-operator/istio-egress-external-services.sh

  - name: e2e-istio-with-citadel
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [e2e-egress-gateway]
    commands:
      - export CLUSTER_NAME=124
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export KUBECONFIG=/shared/kube/kubeconfig-124
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-install.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-1.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-2.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-3.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-cleanup.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-rollback.sh

  - name: wait_for_debug
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    depends_on: [e2e-istio-with-citadel]
    commands:
      - sleep 1h
    when:
      status:
        - failure

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v1.24.0
    pull: always
    depends_on: [wait_for_debug]
    settings:
      action: destroy
      pipeline_id: cluster-124
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}

---
name: e2e-kubernetes-1.24-kuma
kind: pipeline
type: docker

depends_on:
  - e2e-kubernetes-1.24-istio

platform:
  os: linux
  arch: amd64

node:
  runner: internal

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**
      - refs/heads/hotfix-*
      - refs/heads/develop # TBD

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v1.24.0
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [clone]
    settings:
      action: custom-cluster-124
      pipeline_id: cluster-124
      local_kind_config_path: katalog/tests/istio-operator/kind-config.yml
      instance_size: 2-extra-large
      cluster_version: "1.24.0"
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password

  - name: e2e-kuma-standalone
    image: quay.io/sighup/e2e-testing:1.1.0_0.2.2_2.16.1_1.9.4_1.20.7_3.8.7_2.4.1
    pull: always
    volumes:
      - name: shared
        path: /shared
    depends_on: [init]
    commands:
      - export CLUSTER_NAME=124
      - export INSTANCE_IP=$(cat /shared/machine/ip)
      - export KUBECONFIG=/shared/kube/kubeconfig-124
      - bats -t katalog/tests/kuma-standalone/kuma-standalone-deploy.sh
      - bats -t katalog/tests/kuma-standalone/kuma-demo-deploy.sh

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v1.24.0
    pull: always
    depends_on: [e2e-kuma-standalone]
    settings:
      action: destroy
      pipeline_id: cluster-124
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
      vsphere_server:
        from_secret: vsphere_server
      vsphere_password:
        from_secret: vsphere_password
      vsphere_user:
        from_secret: vsphere_user
      dockerhub_username:
        from_secret: dockerhub_username
      dockerhub_password:
        from_secret: dockerhub_password
    when:
      status:
        - success
        - failure

volumes:
  - name: shared
    temp: {}