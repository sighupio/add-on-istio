# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# Pipelines order:
# 1. license
#Â 2. policeman
# 4. istio-1.28
# 5. istio-1.29
# 5. istio-1.30
# 6. release

name: license
kind: pipeline
type: docker

steps:
  - name: check
    image: docker.io/library/golang:1.20
    pull: always
    commands:
      - go install github.com/google/addlicense@v1.1.1
      - addlicense -c "SIGHUP s.r.l" -v -l bsd -y "2017-present" --check .

---
name: policeman
kind: pipeline
type: docker

depends_on:
  - license

platform:
  os: linux
  arch: amd64

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      FILTER_REGEX_EXCLUDE: (katalog/tests/helper)
      # Identifies false positives like missing 'selector'.
      # Doing this is valid for Kustomize patches
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # Some duplicated code is intended.
      VALIDATE_JSCPD: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      # Disable natural language checks
      VALIDATE_NATURAL_LANGUAGE: "false"
      # Disable .env files validation
      VALIDATE_ENV: "false"
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/istio-operator/profiles/full > istio-operator-full.yml

  - name: check-deprecated-apis
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
      - /pluto detect istio-operator-full.yml --ignore-deprecations --ignore-removals --target-versions=k8s=v1.27.0
      - /pluto detect istio-operator-full.yml --ignore-deprecations --ignore-removals --target-versions=k8s=v1.28.0
      - /pluto detect istio-operator-full.yml --ignore-deprecations --ignore-removals --target-versions=k8s=v1.29.0
      - /pluto detect istio-operator-full.yml --ignore-deprecations --ignore-removals --target-versions=k8s=v1.30.0

---
name: e2e-kubernetes-1.27-istio
kind: pipeline
type: docker

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**
      - refs/heads/hotfix-*

steps:

  - name: Generate Kind Config file
    image: alpine:latest
    pull: always
    commands:
      - sh ./katalog/tests/istio-operator/generate-template.sh 1.27.0

  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    depends_on: [clone]
    environment:
      CLUSTER_VERSION: v1.27.3
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.27.0
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig-1.27.0
    commands:
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config ./config-$${CLUSTER_NAME}.yaml
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e-requirements
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.27.0
      KUBECONFIG: /drone/src/kubeconfig-1.27.0
    depends_on: [create-kind-cluster]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - cd katalog/tests/istio-operator/requirements
      - furyctl vendor -H
      - cd ../../../../
      - bats -t katalog/tests/istio-operator/istio-requirements.sh

  - name: e2e-basic-istio
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.27.0
      KUBECONFIG: /drone/src/kubeconfig-1.27.0
    depends_on: [e2e-requirements]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-minimal-install.sh
      - bats -t katalog/tests/istio-operator/istio-minimal.sh

  - name: e2e-egress-gateway
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.27.0
      KUBECONFIG: /drone/src/kubeconfig-1.27.0
    depends_on: [e2e-basic-istio]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-egress-install.sh
      - bats -t katalog/tests/istio-operator/istio-egress-external-services.sh

  - name: e2e-istio-with-citadel
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.27.0
      KUBECONFIG: /drone/src/kubeconfig-1.27.0
    depends_on: [e2e-egress-gateway]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-install.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-1.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-2.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-3.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-cleanup.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-rollback.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    pull: always
    depends_on: [e2e-istio-with-citadel]
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.27.0
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: e2e-kubernetes-1.28-istio
kind: pipeline
type: docker

depends_on:
  - e2e-kubernetes-1.27-istio

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**
      - refs/heads/hotfix-*

steps:

  - name: Generate Kind Config file
    image: alpine:latest
    pull: always
    commands:
      - sh ./katalog/tests/istio-operator/generate-template.sh 1.28.0

  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    depends_on: [clone]
    environment:
      CLUSTER_VERSION: v1.28.0
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.28.0
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig-1.28.0
    commands:
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config ./config-$${CLUSTER_NAME}.yaml
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e-requirements
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.28.0
      KUBECONFIG: /drone/src/kubeconfig-1.28.0
    depends_on: [create-kind-cluster]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - cd katalog/tests/istio-operator/requirements
      - furyctl vendor -H
      - cd ../../../../
      - bats -t katalog/tests/istio-operator/istio-requirements.sh

  - name: e2e-basic-istio
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.28.0
      KUBECONFIG: /drone/src/kubeconfig-1.28.0
    depends_on: [e2e-requirements]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-minimal-install.sh
      - bats -t katalog/tests/istio-operator/istio-minimal.sh

  - name: e2e-egress-gateway
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.28.0
      KUBECONFIG: /drone/src/kubeconfig-1.28.0
    depends_on: [e2e-basic-istio]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-egress-install.sh
      - bats -t katalog/tests/istio-operator/istio-egress-external-services.sh

  - name: e2e-istio-with-citadel
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.28.0
      KUBECONFIG: /drone/src/kubeconfig-1.28.0
    depends_on: [e2e-egress-gateway]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-install.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-1.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-2.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-3.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-cleanup.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-rollback.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    pull: always
    depends_on: [e2e-istio-with-citadel]
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.28.0
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: e2e-kubernetes-1.29-istio
kind: pipeline
type: docker

depends_on:
  - e2e-kubernetes-1.28-istio

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**
      - refs/heads/hotfix-*

steps:

  - name: Generate Kind Config file
    image: alpine:latest
    pull: always
    commands:
      - sh ./katalog/tests/istio-operator/generate-template.sh v1.29.0

  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    depends_on: [clone]
    environment:
      CLUSTER_VERSION: v1.29.0
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig-1.29.0
    commands:
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config ./config-$${CLUSTER_NAME}.yaml
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e-requirements
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
      KUBECONFIG: /drone/src/kubeconfig-1.29.0
    depends_on: [create-kind-cluster]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - cd katalog/tests/istio-operator/requirements
      - furyctl vendor -H
      - cd ../../../../
      - bats -t katalog/tests/istio-operator/istio-requirements.sh

  - name: e2e-basic-istio
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
      KUBECONFIG: /drone/src/kubeconfig-1.29.0
    depends_on: [e2e-requirements]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-minimal-install.sh
      - bats -t katalog/tests/istio-operator/istio-minimal.sh

  - name: e2e-egress-gateway
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
      KUBECONFIG: /drone/src/kubeconfig-1.29.0
    depends_on: [e2e-basic-istio]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-egress-install.sh
      - bats -t katalog/tests/istio-operator/istio-egress-external-services.sh

  - name: e2e-istio-with-citadel
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
      KUBECONFIG: /drone/src/kubeconfig-1.29.0
    depends_on: [e2e-egress-gateway]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-install.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-1.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-2.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-3.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-cleanup.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-rollback.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    pull: always
    depends_on: [e2e-istio-with-citadel]
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.29.0
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: e2e-kubernetes-1.30-istio
kind: pipeline
type: docker

depends_on: 
  - e2e-kubernetes-1.29-istio
  # - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**
      - refs/heads/hotfix-*

steps:

  - name: Generate Kind Config file
    image: alpine:latest
    pull: always
    commands:
      - sh ./katalog/tests/istio-operator/generate-template.sh 1.30.4

  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.30.5_3.10.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    # depends_on: [clone]
    environment:
      CLUSTER_VERSION: v1.30.4
      # CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-129
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig-1.30.4
    commands:
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config ./config-$${CLUSTER_NAME}.yaml
      # - kubectl cluster-info --context $${CLUSTER_NAME}
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}
    depends_on:
      - Generate Kind Config file

  - name: e2e-requirements
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
      KUBECONFIG: /drone/src/kubeconfig-1.30.4
    depends_on: [create-kind-cluster]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - cd katalog/tests/istio-operator/requirements
      - furyctl vendor -H
      - cd ../../../../
      - bats -t katalog/tests/istio-operator/istio-requirements.sh

  - name: e2e-basic-istio
    image: quay.io/sighup/e2e-testing:1.1.0_3.12.0_1.30.5_3.10.0_4.33.3
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
      KUBECONFIG: /drone/src/kubeconfig-1.30.4
    depends_on: [e2e-requirements]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-minimal-install.sh
      - bats -t katalog/tests/istio-operator/istio-minimal.sh

  - name: e2e-egress-gateway
    image: quay.io/sighup/e2e-testing:1.1.0_3.12.0_1.30.5_3.10.0_4.33.3
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
      KUBECONFIG: /drone/src/kubeconfig-1.30.4
    depends_on: [e2e-basic-istio]
    commands:
      - . ./env-$${CLUSTER_NAME}.env
      - bats -t katalog/tests/istio-operator/istio-egress-install.sh
      - bats -t katalog/tests/istio-operator/istio-egress-external-services.sh

  - name: e2e-istio-with-citadel
    image: quay.io/sighup/e2e-testing:1.1.0_3.12.0_1.30.5_3.10.0_4.33.3
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
      KUBECONFIG: /drone/src/kubeconfig-1.30.4
    depends_on: [e2e-egress-gateway]
    commands:
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-install.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-1.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-2.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-3.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-cleanup.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-rollback.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.30.5_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    pull: always
    depends_on: [e2e-istio-with-citadel]
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-1.30.4
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: release
kind: pipeline
type: docker

depends_on:
  - e2e-kubernetes-1.27-istio
  - e2e-kubernetes-1.28-istio
  - e2e-kubernetes-1.29-istio
  - e2e-kubernetes-1.30-istio

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:

  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [clone]
    commands:
      - tar -zcvf fury-kubernetes-service-mesh-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-service-mesh-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-service-mesh-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
