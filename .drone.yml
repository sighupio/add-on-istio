# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# Pipelines order:
# 1. license
#Â 2. policeman
# 3. istio-1.24 + istio-1.25
# 4. istio-1.26 + istio-1.27
# 5. release

name: license
kind: pipeline
type: docker

steps:
  - name: check
    image: docker.io/library/golang:1.20
    pull: always
    commands:
      - go install github.com/google/addlicense@v1.1.1
      - addlicense -c "SIGHUP s.r.l" -v -l bsd -y "2017-present" --check .

---
name: policeman
kind: pipeline
type: docker

depends_on:
  - license

platform:
  os: linux
  arch: amd64

steps:
  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'.
      # Doing this is valid for Kustomize patches
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # Some duplicated code is intended.
      VALIDATE_JSCPD: "false"
      # hadolint already validated dockerfiles
      VALIDATE_DOCKERFILE: "false"
      # Disable natural language checks
      VALIDATE_NATURAL_LANGUAGE: "false"
      # Disable .env files validation
      VALIDATE_ENV: "false"
    depends_on:
      - clone

  - name: render
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    depends_on:
      - clone
    commands:
      - kustomize build katalog/istio-operator/profiles/full > istio-operator-full.yml

  - name: check-deprecated-apis
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
    - /pluto detect istio-operator-full.yml --ignore-deprecations --ignore-removals --target-versions=k8s=v1.27.0
---
name: e2e-kubernetes-1.24-istio
kind: pipeline
type: docker

depends_on:
  - policeman

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/heads/master
      - refs/tags/**
      - refs/heads/hotfix-*
      - refs/heads/develop

steps:
  - name: create-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    depends_on: [clone]
    environment:
      CLUSTER_VERSION: v1.24.0
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-124
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig-124
    commands:
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config katalog/tests/istio-operator/kind-config.yml
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e-requirements
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-124
      KUBECONFIG: /drone/src/kubeconfig-124
    depends_on: [create-kind-cluster]
    commands:
      - cd katalog/tests/istio-operator/requirements
      - furyctl vendor -H
      - cd ../../../../
      - bats -t katalog/tests/istio-operator/istio-requirements.sh

  - name: e2e-basic-istio
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-124
      KUBECONFIG: /drone/src/kubeconfig-124
    depends_on: [e2e-requirements]
    commands:
      - bats -t katalog/tests/istio-operator/istio-minimal-install.sh
      - bats -t katalog/tests/istio-operator/istio-minimal.sh

  - name: e2e-egress-gateway
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-124
      KUBECONFIG: /drone/src/kubeconfig-124
    depends_on: [e2e-basic-istio]
    commands:
      - bats -t katalog/tests/istio-operator/istio-egress-install.sh
      - bats -t katalog/tests/istio-operator/istio-egress-external-services.sh

  - name: e2e-istio-with-citadel
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-124
      KUBECONFIG: /drone/src/kubeconfig-124
    depends_on: [e2e-egress-gateway]
    commands:
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-install.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-1.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-2.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-3.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-authn-cleanup.sh
      - bats -t katalog/tests/istio-operator/istio-citadel-rollback.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    pull: always
    depends_on: [e2e-istio-with-citadel]
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}-124
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

#---
# name: e2e-kubernetes-1.25-istio
# kind: pipeline
# type: docker

# depends_on:
#   - policeman

# platform:
#   os: linux
#   arch: amd64

# trigger:
#   ref:
#     include:
#       - refs/heads/master
#       - refs/tags/**
#       - refs/heads/hotfix-*

# steps:
#   - name: init
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.25.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [clone]
#     settings:
#       action: custom-cluster-125
#       pipeline_id: cluster-125
#       local_kind_config_path: katalog/tests/istio-operator/kind-config.yml
#       instance_size: 2-extra-large
#       cluster_version: "1.25.3"
#       instance_path: /shared
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password

#   - name: e2e-requirements
#     image: quay.io/sighup/e2e-testing:1.1.0_0.9.0_3.1.1_1.9.4_1.25.3_3.5.3_4.21.1
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [init]
#     commands:
#       - export CLUSTER_NAME=125
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-125
#       - cd katalog/tests/istio-operator/requirements
#       - furyctl vendor -H
#       - cd ../../../../
#       - bats -t katalog/tests/istio-operator/istio-requirements.sh

#   - name: e2e-basic-istio
#     image: quay.io/sighup/e2e-testing:1.1.0_0.9.0_3.1.1_1.9.4_1.25.3_3.5.3_4.21.1
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [e2e-requirements]
#     commands:
#       - export CLUSTER_NAME=125
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-125
#       - bats -t katalog/tests/istio-operator/istio-minimal-install.sh
#       - bats -t katalog/tests/istio-operator/istio-minimal.sh

#   - name: e2e-egress-gateway
#     image: quay.io/sighup/e2e-testing:1.1.0_0.9.0_3.1.1_1.9.4_1.25.3_3.5.3_4.21.1
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [e2e-basic-istio]
#     commands:
#       - export CLUSTER_NAME=125
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-125
#       - bats -t katalog/tests/istio-operator/istio-egress-install.sh
#       - bats -t katalog/tests/istio-operator/istio-egress-external-services.sh

#   - name: e2e-istio-with-citadel
#     image: quay.io/sighup/e2e-testing:1.1.0_0.9.0_3.1.1_1.9.4_1.25.3_3.5.3_4.21.1
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [e2e-egress-gateway]
#     commands:
#       - export CLUSTER_NAME=125
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-125
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-install.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-1.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-2.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-3.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-cleanup.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-rollback.sh

#   - name: destroy
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.25.3
#     pull: always
#     depends_on: [e2e-istio-with-citadel]
#     settings:
#       action: destroy
#       pipeline_id: cluster-125
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password
#     when:
#       status:
#         - success
#         - failure

# volumes:
#   - name: shared
#     temp: {}

# ---
# name: e2e-kubernetes-1.26-istio
# kind: pipeline
# type: docker

# depends_on:
#   - e2e-kubernetes-1.24-istio
#   - e2e-kubernetes-1.25-istio


# platform:
#   os: linux
#   arch: amd64

# trigger:
#   ref:
#     include:
#       - refs/heads/master
#       - refs/tags/**
#       - refs/heads/hotfix-*

# steps:
#   - name: init
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.26.4
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [clone]
#     settings:
#       action: custom-cluster-126
#       pipeline_id: cluster-126
#       local_kind_config_path: katalog/tests/istio-operator/kind-config.yml
#       instance_size: 2-extra-large
#       cluster_version: "1.26.4"
#       instance_path: /shared
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password

#   - name: e2e-requirements
#     image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.1.1_1.9.4_1.26.3_3.5.3_4.33.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [init]
#     commands:
#       - export CLUSTER_NAME=126
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-126
#       - cd katalog/tests/istio-operator/requirements
#       - furyctl vendor -H
#       - cd ../../../../
#       - bats -t katalog/tests/istio-operator/istio-requirements.sh

#   - name: e2e-basic-istio
#     image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.1.1_1.9.4_1.26.3_3.5.3_4.33.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [e2e-requirements]
#     commands:
#       - export CLUSTER_NAME=126
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-126
#       - bats -t katalog/tests/istio-operator/istio-minimal-install.sh
#       - bats -t katalog/tests/istio-operator/istio-minimal.sh

#   - name: e2e-egress-gateway
#     image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.1.1_1.9.4_1.26.3_3.5.3_4.33.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [e2e-basic-istio]
#     commands:
#       - export CLUSTER_NAME=126
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-126
#       - bats -t katalog/tests/istio-operator/istio-egress-install.sh
#       - bats -t katalog/tests/istio-operator/istio-egress-external-services.sh

#   - name: e2e-istio-with-citadel
#     image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.1.1_1.9.4_1.26.3_3.5.3_4.33.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [e2e-egress-gateway]
#     commands:
#       - export CLUSTER_NAME=126
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-126
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-install.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-1.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-2.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-3.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-cleanup.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-rollback.sh

#   - name: destroy
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.26.4
#     pull: always
#     depends_on: [e2e-istio-with-citadel]
#     settings:
#       action: destroy
#       pipeline_id: cluster-126
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password
#     when:
#       status:
#         - success
#         - failure

# volumes:
#   - name: shared
#     temp: {}

# ---
# name: e2e-kubernetes-1.27-istio
# kind: pipeline
# type: docker

# depends_on:
#   - e2e-kubernetes-1.24-istio
#   - e2e-kubernetes-1.25-istio

# platform:
#   os: linux
#   arch: amd64

# trigger:
#   ref:
#     include:
#       - refs/heads/master
#       - refs/tags/**
#       - refs/heads/hotfix-*

# steps:
#   - name: init
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.27.1
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [clone]
#     settings:
#       action: custom-cluster-127
#       pipeline_id: cluster-127
#       local_kind_config_path: katalog/tests/istio-operator/kind-config.yml
#       instance_size: 2-extra-large
#       cluster_version: "1.27.1"
#       instance_path: /shared
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password

#   - name: e2e-requirements
#     image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.27.1_3.5.3_4.33.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [init]
#     commands:
#       - export CLUSTER_NAME=127
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-127
#       - cd katalog/tests/istio-operator/requirements
#       - furyctl vendor -H
#       - cd ../../../../
#       - bats -t katalog/tests/istio-operator/istio-requirements.sh

#   - name: e2e-basic-istio
#     image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.27.1_3.5.3_4.33.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [e2e-requirements]
#     commands:
#       - export CLUSTER_NAME=127
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-127
#       - bats -t katalog/tests/istio-operator/istio-minimal-install.sh
#       - bats -t katalog/tests/istio-operator/istio-minimal.sh

#   - name: e2e-egress-gateway
#     image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.27.1_3.5.3_4.33.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [e2e-basic-istio]
#     commands:
#       - export CLUSTER_NAME=127
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-127
#       - bats -t katalog/tests/istio-operator/istio-egress-install.sh
#       - bats -t katalog/tests/istio-operator/istio-egress-external-services.sh

#   - name: e2e-istio-with-citadel
#     image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.12.0_1.9.4_1.27.1_3.5.3_4.33.3
#     pull: always
#     volumes:
#       - name: shared
#         path: /shared
#     depends_on: [e2e-egress-gateway]
#     commands:
#       - export CLUSTER_NAME=127
#       - export INSTANCE_IP=$(cat /shared/machine/ip)
#       - export KUBECONFIG=/shared/kube/kubeconfig-127
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-install.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-1.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-2.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-3.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-authn-cleanup.sh
#       - bats -t katalog/tests/istio-operator/istio-citadel-rollback.sh

#   - name: destroy
#     image: quay.io/sighup/e2e-testing-drone-plugin:v1.27.1
#     pull: always
#     depends_on: [e2e-istio-with-citadel]
#     settings:
#       action: destroy
#       pipeline_id: cluster-127
#       aws_default_region:
#         from_secret: aws_region
#       aws_access_key_id:
#         from_secret: aws_access_key_id
#       aws_secret_access_key:
#         from_secret: aws_secret_access_key
#       terraform_tf_states_bucket_name:
#         from_secret: terraform_tf_states_bucket_name
#       vsphere_server:
#         from_secret: vsphere_server
#       vsphere_password:
#         from_secret: vsphere_password
#       vsphere_user:
#         from_secret: vsphere_user
#       dockerhub_username:
#         from_secret: dockerhub_username
#       dockerhub_password:
#         from_secret: dockerhub_password
#     when:
#       status:
#         - success
#         - failure

# volumes:
#   - name: shared
#     temp: {}
---
name: release
kind: pipeline
type: docker

depends_on:
  - e2e-kubernetes-1.24-istio
  # - e2e-kubernetes-1.25-istio
  # - e2e-kubernetes-1.26-istio
  # - e2e-kubernetes-1.27-istio


platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**

steps:

  - name: prepare-tar-gz
    image: alpine:latest
    pull: always
    depends_on: [clone]
    commands:
      - tar -zcvf fury-kubernetes-service-mesh-${DRONE_TAG}.tar.gz katalog/ LICENSE README.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    pull: always
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-service-mesh-${DRONE_TAG}.tar.gz
      prerelease: true
      overwrite: true
      title: "Preview ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-tar-gz
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: overwrite
      files:
        - fury-kubernetes-service-mesh-${DRONE_TAG}.tar.gz
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
        include:
          - refs/tags/v**
