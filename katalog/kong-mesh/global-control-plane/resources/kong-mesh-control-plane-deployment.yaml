apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-mesh-control-plane
  namespace: kong-mesh-system
  labels:
    app.kubernetes.io/name: kong-mesh
    app.kubernetes.io/instance: kong-mesh
    app: kong-mesh-control-plane
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kong-mesh
      app.kubernetes.io/instance: kong-mesh
      app: kong-mesh-control-plane
  template:
    metadata:
      annotations:
        checksum/config: 669fd7d355256611cd099f465c305179f7960a1234fa819da6116a4a6f735f24
        checksum/tls-secrets: 7f2d9e840083632d9d6a955074b46caa1af4d22ac84618ef2d7c44ea7570fe36
      labels:
        app.kubernetes.io/name: kong-mesh
        app.kubernetes.io/instance: kong-mesh
        app: kong-mesh-control-plane
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kong-mesh-control-plane
              topologyKey: kubernetes.io/hostname
      serviceAccountName: kong-mesh-control-plane
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: control-plane
          image: "docker.io/kong/kuma-cp:1.5.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: KMESH_MULTIZONE_GLOBAL_KDS_AUTH_TYPE
              value: "cpToken"
            - name: KUMA_API_SERVER_AUTHN_LOCALHOST_IS_ADMIN
              value: "false"
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "docker.io/kong/kuma-init:1.5.1"
            - name: KUMA_MODE
              value: "global"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kong-mesh-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "false"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "docker.io/kong/kuma-dp:1.5.1"
            - name: KUMA_RUNTIME_KUBERNETES_SERVICE_ACCOUNT_NAME
              value: "system:serviceaccount:kong-mesh-system:kong-mesh-control-plane"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "kong-mesh-system"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          args:
            - run
            - --log-level=info
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
          livenessProbe:
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            httpGet:
              path: /ready
              port: 5680
          resources:
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
            - name: kong-mesh-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
      volumes:
        - name: general-tls-cert
          secret:
            secretName: kong-mesh-tls-cert
        - name: kong-mesh-control-plane-config
          configMap:
            name: kong-mesh-control-plane-config
